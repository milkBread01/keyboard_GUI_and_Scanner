<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36" version="27.0.5">
  <diagram name="Page-1" id="1SPhpuADm64l0Hxg2bN5">
    <mxGraphModel dx="2503" dy="2014" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-1" value="Main()" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="425" y="-470" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-3" value="Class Encoder" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="140" y="120" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="7xy5X7pBSjGH1rJuHNb_-4" target="KJ3M8dmH54Ed4lHhk8dp-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-4" value="Class ProfileManager" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-190" y="120" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-5" value="Class LCDController" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="490" y="110" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-6" value="Class SystemManager" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="860" y="110" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-7" value="Class HostCommunicator" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1600" y="110" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-8" value="Class KeyScanner" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1220" y="110" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-19" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="7xy5X7pBSjGH1rJuHNb_-9" target="7xy5X7pBSjGH1rJuHNb_-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-9" value="Class CreatedProfiles" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-570" y="120" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-10" value="header" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="-680" y="250" width="340" height="40" as="geometry" />
        </mxCell>
        <mxCell id="7xy5X7pBSjGH1rJuHNb_-15" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;&lt;div&gt;Reads and parses the full JSON file into memory&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Creates and holds all Profile objects&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Provides read-only or query access to:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Full key maps&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Profile metadata (media, primary flag, etc.)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Profile names list&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="-680" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-2" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;&lt;div&gt;Holds only the active profile name&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Requests data (keys, media, etc.) from CreateProfiles&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Performs logic such as:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Set active profile&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Check for flags (new profile needed, etc.)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Pass keymaps to KeyScanner&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Notify SystemManager of profile changes&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-320" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-3" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;Tracks the encoder’s state: rotation, short clicks, long clicks, and combination actions. Interprets physical input into logical states (State 0–3) and informs &lt;code data-end=&quot;1506&quot; data-start=&quot;1491&quot;&gt;SystemManager&lt;/code&gt; how to respond (e.g., show battery, switch profile).&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="30" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-4" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;Manages what is shown on the LCD screen, including media, battery status, profile selection UI, and pairing prompts. Handles display overrides and UI responses based on encoder input or system flags.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="380" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-5" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;Top-level controller that initializes all subsystems, runs the main loop, and coordinates encoder input, profile changes, LCD output, and key scanning. Acts as the brain of the microcontroller logic.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="740" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-6" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;Scans the matrix of rows and columns for key presses. Uses the current profile’s key mappings to determine and dispatch the correct action (e.g., launch app, send string). Can store and iterate over a nested map of active key mappings.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1100" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-7" value="-------OVERALL-------&amp;nbsp;&lt;div&gt;Handles all file and flag communication between the microcontroller and host PC (or GUI). Responsible for reading the JSON profile file, sending status flags (like battery %), and managing media file lookup. Acts as the bridge between MC and host.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-------METHODS-------&amp;nbsp;&lt;/div&gt;&lt;div&gt;- Constructor:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1480" y="-280" width="340" height="340" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-13" value="&lt;div&gt;class CreateProfiles {&lt;/div&gt;&lt;div&gt;namespace KeypadController{&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;public:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void loadFromFile(const std::string&amp;amp; path);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::vector&amp;lt;std::string&amp;gt;&amp;amp; getAllProfileNames() const;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::map&amp;lt;std::pair&amp;lt;int, int&amp;gt;, KeyAction&amp;gt;&amp;amp; getKeyMap(const std::string&amp;amp; profileName) const;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::map&amp;lt;std::string, std::string&amp;gt;&amp;amp; getMedia(const std::string&amp;amp; profileName) const;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; bool isPrimary(const std::string&amp;amp; profileName) const;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;private:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ProfileData {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::map&amp;lt;std::pair&amp;lt;int, int&amp;gt;, KeyAction&amp;gt; keys;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::map&amp;lt;std::string, std::string&amp;gt; media;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bool primary;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; std::map&amp;lt;std::string, ProfileData&amp;gt; profiles;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-680" y="290" width="320" height="410" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-14" value="header" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-300" y="250" width="340" height="40" as="geometry" />
        </mxCell>
        <mxCell id="KJ3M8dmH54Ed4lHhk8dp-15" value="&lt;div&gt;class ProfileManager&amp;nbsp;{&lt;/div&gt;&lt;div&gt;namespace KeypadController{&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;class ProfileManager {&lt;/div&gt;&lt;div&gt;public:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ProfileManager(CreateProfiles&amp;amp; profileDataRef);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void setActiveProfile(const std::string&amp;amp; name);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::string&amp;amp; getActiveProfileName() const;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::map&amp;lt;std::pair&amp;lt;int, int&amp;gt;, KeyAction&amp;gt;&amp;amp; getActiveKeyMap() const;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const std::map&amp;lt;std::string, std::string&amp;gt;&amp;amp; getActiveMedia() const;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;private:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; std::string activeName;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; CreateProfiles&amp;amp; profiles;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-300" y="290" width="320" height="410" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
